任务：构建医疗知识图谱
1、下载neo4j数据库；java jdk;数据集：DiseaseKG、 CMeEE-V2

2、构建DiseaseKG数据集图谱：
简介：共有8类实体类别，4.4万实体量级；疾病实体属性7类；关系类型11类，约31万关系量级。
细节：py2neo模块，用于连接python和neo4j数据库

3、构建新数据集：由于DiseaseKG数据集的文本信息不适用于命名实体识别、关系提取等任务，
我们找了CMeEE-V2医疗数据集，该数据集中有四个实体类别与DiseaseKG数据集相同，我们将CMeEE-V2医疗数据集
的这四个类别的文本数据提取出，标注成BI形式，还有四个类别就用DiseaseKG数据集本身的文本信息来标注。
细节：ahocorasick模块，可根据文本快速查找实体（适用于已有全部实体，标注文本）

4、生成ner数据：
将文本按照，。：等符号切断，然后对句子进行处理。当句子长度超过35字符， 不做处理，直接扔进all_data[],
当句子长度小于35时，会将这些短句进行拼接，当拼接完的长度超过35时，扔进all_data[],
(当拼接的句子长度大于35并且给一个0.15的概率，让句子再次拼接，在操作下就会出现一部分长句，
这样子更符合实际的应用场景并且让模型可扩展性更强   ）                                                                                                         

5、构建命名实体识别模型
将生成的ner数据拿出百分之18用作验证集。
通过（实体替换、实体掩盖、实体拼接）这三个策略进行数据增强。
模型：bert+lstm+linear
实体对齐：因为模型预测出的实体图谱中不一定有，所以要用到实体对齐，当模型预测出的结果在图谱中没出现时，用tf-idf模型对预测实体和实体库进行编码，
然后让向量之间进行余弦相似度进行计算，找到相似度最高的实体，返回出来。

6、意图识别
意图识别本质上就是个文本分类任务，类别总量就是该实体的关系数量和属性数量总和。
考虑到使用模型训练要搜集大量的数据以及标注，所以我们使用的是规则方法，例如：
输入文本：胃癌会有什么症状
通过实体识别模型能够检测出胃癌这个实体，然后把该实体扔进意图识别模块，
我们的规则是遇见症状、宜吃、忌吃等关系词或者名称、治疗周期等属性词时，直接返回需要的结点信息。


